<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Drone-ci on gngpp</title>
    <link>https://blog.innas.cn/tags/drone-ci/</link>
    <description>Recent content in Drone-ci on gngpp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 May 2020 19:07:06 +0000</lastBuildDate><atom:link href="https://blog.innas.cn/tags/drone-ci/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Drone-ci 入门</title>
      <link>https://blog.innas.cn/posts/ci-cd/drone-ci-%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sat, 02 May 2020 19:07:06 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/ci-cd/drone-ci-%E5%85%A5%E9%97%A8/</guid>
      <description>Drone CI 基本操作 1. Drone-Server Drone-server是整个CI的核心，drone.yml的解析以及与其它各个git平台的集成，还有UI的显示等功能. 其必须运行在docker环境下, 配置文件如下。
services: drone-server: image: drone/drone:latest ports: - 3306:80 - 10043:443 volumes: - /var/lib/drone:/var/lib/drone restart: always environment: - DRONE_GITHUB_CLIENT_ID= - DRONE_GITHUB_CLIENT_SECRET= - DRONE_RPC_SECRET=a7ab0d75fe294718575953b164c12ddf - DRONE_RPC_PROTO=http - DRONE_SERVER_HOST=you host - DRONE_SERVER_PROTO=http - DRONE_SECRET=462e36f444bd7ba17d2372f2b391ba5f - DRONE_LOGS_DEBUG=true - DRONE_LOGS_TEXT=true - DRONE_LOGS_PRETTY=true - DRONE_LOGS_COLOR=true - DRONE_LOGS_TRACE=true - DRONE_RPC_DUMP_HTTP=true - DRONE_RPC_DUMP_HTTP_BODY=true - DRONE_UI_USERNAME=root - DRONE_UI_PASSWORD=root - DRONE_USER_CREATE=username:lyqingye,admin:true - DRONE_OPEN=true 其中：
DRONE_RPC_SECRET 为远程调用的秘钥，因为Drone可以是分布式的，其其它组件可以通过远程调用的方式与Server通信。 DRONE_SERVER_HOST 为你的主机地址，Drone UI的地址，可以看到在Docker配置中，我做了一个端口映射3306:80, Drone-Server 默认运行在 80端口，所以我的主机地址应该填xxx:3306 DRONE_GITHUB_CLIENT_ID 和 DRONE_GITHUB_CLIENT_SECRET 在 https://github.</description>
    </item>
    
  </channel>
</rss>
