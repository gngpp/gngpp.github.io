<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>docker-compose on gngpp</title>
    <link>https://example.org/tags/docker-compose/</link>
    <description>Recent content in docker-compose on gngpp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 08 Nov 2021 11:39:52 +0000</lastBuildDate><atom:link href="https://example.org/tags/docker-compose/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>docker-compose基本使用</title>
      <link>https://example.org/posts/docker/docker-compose%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 08 Nov 2021 11:39:52 +0000</pubDate>
      
      <guid>https://example.org/posts/docker/docker-compose%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>前言  docker-compose工作做的就是容器编排，说白了就是自动化部署容器的工作，其中可以利用Dockerfile构建自定义容器打包部署，也可以利用现有的仓库镜像进行部署。
 docker- compose常用命令 基本命令
 ps：列出所有运行容器   docker-compose ps  port：打印绑定的公共端口，下面命令可以输出 eureka 服务 8761 端口所绑定的公共端口  docker-compose port eureka 8761  build：构建或者重新构建服务  docker-compose build  start：启动指定服务已存在的容器  docker-compose start eureka  stop：停止已运行的服务的容器  docker-compose stop eureka  rm：删除服务的容器  docker-compose rm eureka # 不指定，则删除所有 docker-compose rm  up：构建、启动容器  docker-compose up  kill：通过发送 SIGKILL 信号来停止指定服务的容器  docker-compose kill eureka  pull：下载服务镜像  docker-compose pull  scale：设置指定服务运气容器的个数，以 service=num 形式指定  docker-compose scale user=3 movie=3  run：在一个服务上执行一个命令  docker-compose run web bash 进阶用法</description>
    </item>
    
  </channel>
</rss>
