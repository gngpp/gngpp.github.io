<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on gngpp</title>
    <link>https://blog.innas.cn/categories/docker/</link>
    <description>Recent content in Docker on gngpp</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Feb 2022 21:04:22 +0000</lastBuildDate><atom:link href="https://blog.innas.cn/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker创建网络错误提示</title>
      <link>https://blog.innas.cn/posts/docker/docker%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA/</link>
      <pubDate>Tue, 08 Feb 2022 21:04:22 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker%E5%88%9B%E5%BB%BA%E7%BD%91%E7%BB%9C%E9%94%99%E8%AF%AF%E6%8F%90%E7%A4%BA/</guid>
      <description>笔者插的USB网口给Docker网心云用，由于网络测试原因多次删除和创建macvlan网络，遇到了以下坑，重启docker并不能解决。
$ docker network create -d macvlan --subnet=192.168.3.0/24 --gateway=192.168.3.1 -o parent=enx00e04c680011 macvlan_net ... Error response from daemon: network dm-04589cecfc96 is already using parent interface enx00e04c680011 解决参考，删除以下文件并重启docker
$ rm /var/lib/docker/network/files/local-kv.db # restart docker systemctl restart docker 这里还有个issue参考：https://github.com/moby/libnetwork/issues/1743</description>
    </item>
    
    <item>
      <title>docker-compose基本使用</title>
      <link>https://blog.innas.cn/posts/docker/docker-compose%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Mon, 08 Nov 2021 11:39:52 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker-compose%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid>
      <description>前言 docker-compose工作做的就是容器编排，说白了就是自动化部署容器的工作，其中可以利用Dockerfile构建自定义容器打包部署，也可以利用现有的仓库镜像进行部署。
docker- compose常用命令 基本命令
ps：列出所有运行容器 docker-compose ps port：打印绑定的公共端口，下面命令可以输出 eureka 服务 8761 端口所绑定的公共端口 docker-compose port eureka 8761 build：构建或者重新构建服务 docker-compose build start：启动指定服务已存在的容器 docker-compose start eureka stop：停止已运行的服务的容器 docker-compose stop eureka rm：删除服务的容器 docker-compose rm eureka # 不指定，则删除所有 docker-compose rm up：构建、启动容器 docker-compose up kill：通过发送 SIGKILL 信号来停止指定服务的容器 docker-compose kill eureka pull：下载服务镜像 docker-compose pull scale：设置指定服务运气容器的个数，以 service=num 形式指定 docker-compose scale user=3 movie=3 run：在一个服务上执行一个命令 docker-compose run web bash 进阶用法
指定docker-compose文件 docker-compose -f file_path </description>
    </item>
    
    <item>
      <title>Docker快速入门</title>
      <link>https://blog.innas.cn/posts/docker/docker%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 01 Aug 2021 13:09:10 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/</guid>
      <description>docker笔记 docker的用处简单来说，就是将软件（mysql，redis）配置好后，将其打包成镜像，然后可以快速的部署的各个服务器，只需要配置一次即可。
1. docker 安装配置docker brew cask install docker 安装完后，配置镜像源
nvim ~/.docker/daemon.json 然后添加上这一行 registry-mirrors: [http://hub-mirror.c.163.com]
添加完后记得重启docker
2. docker 搜索镜像 docker search redis 3. docker 拉取镜像 docker pull redis: version 4. docker 显示已经安装的镜像 docker images 5. docker删除已经安装的镜像 docker rmi imageId &amp;#39;imageId可以用下面命令拿到 docker images &amp;#39;REPOSITORY TAG IMAGE ID CREATED SIZE &amp;#39;redis latest 01a52b3b5cd1 2 weeks ago 98.2MB &amp;#39;01a52b3b5cd1就是 imageId&amp;#39; 6. docker运行容器 docker run [OPTIONS] IMAGE[:TAG|@DIGEST] [COMMAND] [ARG...] &amp;#39;例子 docker run tomcat&amp;#39; docker run的额外参数</description>
    </item>
    
    <item>
      <title>Docker 安装配置Spring Cloud 微服务开箱即用</title>
      <link>https://blog.innas.cn/posts/docker/docker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEspringcloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8/</link>
      <pubDate>Thu, 03 Jun 2021 21:32:31 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEspringcloud%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E7%AE%B1%E5%8D%B3%E7%94%A8/</guid>
      <description>Nacos 拉下镜像 docker pull nacos/nacos-server 启动 docker run -d -p 8848:8848 --env MODE=standalone --name nacos --restart=always nacos/nacos-server Sentinel 拉下镜像 docker pull bladex/sentinel-dashboard 启动 docker run --name sentinel --restart=always -d -p 8858:8858 -d bladex/sentinel-dashboard </description>
    </item>
    
    <item>
      <title>Docker 国内镜像源</title>
      <link>https://blog.innas.cn/posts/docker/docker-%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90-docker%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</link>
      <pubDate>Mon, 05 Apr 2021 23:14:11 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker-%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90-docker%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E6%BA%90/</guid>
      <description>网易 http://hub-mirror.c.163.com Docker中国区官方镜像 https://registry.docker-cn.com 中国科技大学 https://docker.mirrors.ustc.edu.cn 阿里云容器 服务 https://cr.console.aliyun.com/ 首页点击“创建我的容器镜像” 得到一个专属的镜像加速地址，类似于“https://1234abcd.mirror.aliyuncs.com”</description>
    </item>
    
    <item>
      <title>Docker配置Postgres MySQL Redis(随容器重启)</title>
      <link>https://blog.innas.cn/posts/docker/docker%E9%85%8D%E7%BD%AEpostgres-mysql-redis%E9%9A%8F%E5%AE%B9%E5%99%A8%E9%87%8D%E5%90%AF/</link>
      <pubDate>Fri, 26 Mar 2021 15:01:15 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/docker%E9%85%8D%E7%BD%AEpostgres-mysql-redis%E9%9A%8F%E5%AE%B9%E5%99%A8%E9%87%8D%E5%90%AF/</guid>
      <description>MySQL docker run -itd --name mysql --restart=always -p 3306:3306 -e MYSQL_ROOT_PASSWORD=itcast mysql Redis docker run -itd --name redis --restart=always -p 6379:6379 redis Postgres docker run --name postgres --restart=always -e POSTGRES_PASSWORD=itcast -p 5432:5432 -d postgres:latest </description>
    </item>
    
    <item>
      <title>Nacos安装</title>
      <link>https://blog.innas.cn/posts/docker/nacos%E5%AE%89%E8%A3%85-nacos%E5%AE%89%E8%A3%85/</link>
      <pubDate>Fri, 12 Mar 2021 22:39:32 +0000</pubDate>
      
      <guid>https://blog.innas.cn/posts/docker/nacos%E5%AE%89%E8%A3%85-nacos%E5%AE%89%E8%A3%85/</guid>
      <description>Nacos安装 服务（Service）是Nacos 世界的一等公民。Nacos支持几乎所有主流类型的“服务”的发现、配置和管理。
1.Docker安装Nacos 拉取镜像
docker pull nacos/nacos-server 启动容器并且添加映射
docker run -d -p 8848:8848 --env MODE=standalone --name nacos --restart=always nacos/nacos-server 查看容器是否启动
docker ps 检查nacos服务是否正常
浏览器打开 http://localhost:8848/nacos 用户名密码默认为nacos </description>
    </item>
    
  </channel>
</rss>
